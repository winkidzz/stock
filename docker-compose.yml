version: '3.8'

services:
  # PostgreSQL database with pgvector extension
  postgres:
    image: ankane/pgvector:v0.5.1
    environment:
      - POSTGRES_DB=stock_screener
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - stock-screener-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - stock-screener-network

  # Stock Screener API
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/stock_screener
      - REDIS_URL=redis://redis:6379
      - BRAVE_API_KEY=${BRAVE_API_KEY}
      - ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY}
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - LLM_MODEL=gemma3:27b
      - LLM_MODEL_FAST=llama3:8b
      - LLM_MODEL_ANALYSIS=deepseek-r1:70b
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./:/app
    networks:
      - stock-screener-network
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_NAME=Stock Screening Dashboard
    depends_on:
      - api
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    networks:
      - stock-screener-network
    restart: unless-stopped

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
    networks:
      - stock-screener-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  stock-screener-network:
    driver: bridge 